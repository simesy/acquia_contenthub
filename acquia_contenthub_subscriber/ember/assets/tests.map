{"version":3,"sources":["ch-ember-app/tests/adapters/application.jshint.js","ch-ember-app/tests/app.jshint.js","ch-ember-app/tests/helpers/destroy-app.js","ch-ember-app/tests/helpers/destroy-app.jshint.js","ch-ember-app/tests/helpers/module-for-acceptance.js","ch-ember-app/tests/helpers/module-for-acceptance.jshint.js","ch-ember-app/tests/helpers/resolver.js","ch-ember-app/tests/helpers/resolver.jshint.js","ch-ember-app/tests/helpers/start-app.js","ch-ember-app/tests/helpers/start-app.jshint.js","ch-ember-app/tests/models/entity.jshint.js","ch-ember-app/tests/models/list.jshint.js","ch-ember-app/tests/resolver.jshint.js","ch-ember-app/tests/router.jshint.js","ch-ember-app/tests/routes/application.jshint.js","ch-ember-app/tests/routes/data.jshint.js","ch-ember-app/tests/routes/entity.jshint.js","ch-ember-app/tests/routes/list.jshint.js","ch-ember-app/tests/serializers/application.jshint.js","ch-ember-app/tests/test-helper.js","ch-ember-app/tests/test-helper.jshint.js","ch-ember-app/tests/unit/adapters/application-test.js","ch-ember-app/tests/unit/adapters/application-test.jshint.js","ch-ember-app/tests/unit/controllers/entity-test.js","ch-ember-app/tests/unit/controllers/entity-test.jshint.js","ch-ember-app/tests/unit/mixins/hmac-adapter-mixin-test.js","ch-ember-app/tests/unit/mixins/hmac-adapter-mixin-test.jshint.js","ch-ember-app/tests/unit/mixins/hmac-test.js","ch-ember-app/tests/unit/mixins/hmac-test.jshint.js","ch-ember-app/tests/unit/mixins/test-test.js","ch-ember-app/tests/unit/mixins/test-test.jshint.js","ch-ember-app/tests/unit/models/client-test.js","ch-ember-app/tests/unit/models/client-test.jshint.js","ch-ember-app/tests/unit/models/entity-test.js","ch-ember-app/tests/unit/models/entity-test.jshint.js","ch-ember-app/tests/unit/routes/client-test.js","ch-ember-app/tests/unit/routes/client-test.jshint.js","ch-ember-app/tests/unit/routes/entity-test.js","ch-ember-app/tests/unit/routes/entity-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('ch-ember-app/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('ch-ember-app/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ch-ember-app/tests/helpers/start-app', 'ch-ember-app/tests/helpers/destroy-app'], function (exports, _qunit, _chEmberAppTestsHelpersStartApp, _chEmberAppTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _chEmberAppTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n\n        (0, _chEmberAppTestsHelpersDestroyApp['default'])(this.application);\n      }\n    });\n  };\n});","define('ch-ember-app/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/helpers/resolver', ['exports', 'ch-ember-app/resolver', 'ch-ember-app/config/environment'], function (exports, _chEmberAppResolver, _chEmberAppConfigEnvironment) {\n\n  var resolver = _chEmberAppResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _chEmberAppConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _chEmberAppConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('ch-ember-app/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/helpers/start-app', ['exports', 'ember', 'ch-ember-app/app', 'ch-ember-app/config/environment'], function (exports, _ember, _chEmberAppApp, _chEmberAppConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _chEmberAppConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _chEmberAppApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('ch-ember-app/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/models/entity.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/entity.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/entity.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/models/list.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/list.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/list.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/routes/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/routes/data.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/data.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/data.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/routes/entity.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/entity.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/entity.js should pass jshint.\\nroutes/entity.js: line 14, col 45, \\'reject\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('ch-ember-app/tests/routes/list.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/list.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/list.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/serializers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | serializers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/application.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/test-helper', ['exports', 'ch-ember-app/tests/helpers/resolver', 'ember-qunit'], function (exports, _chEmberAppTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_chEmberAppTestsHelpersResolver['default']);\n});","define('ch-ember-app/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/unit/adapters/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('ch-ember-app/tests/unit/adapters/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/adapters/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/application-test.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/unit/controllers/entity-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:entity', 'Unit | Controller | entity', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ch-ember-app/tests/unit/controllers/entity-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/entity-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/entity-test.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/unit/mixins/hmac-adapter-mixin-test', ['exports', 'ember', 'ch-ember-app/mixins/hmac-adapter-mixin', 'qunit'], function (exports, _ember, _chEmberAppMixinsHmacAdapterMixin, _qunit) {\n\n  (0, _qunit.module)('Unit | Mixin | hmac adapter mixin');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var HmacAdapterMixinObject = _ember['default'].Object.extend(_chEmberAppMixinsHmacAdapterMixin['default']);\n    var subject = HmacAdapterMixinObject.create();\n    assert.ok(subject);\n  });\n});","define('ch-ember-app/tests/unit/mixins/hmac-adapter-mixin-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/mixins/hmac-adapter-mixin-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/hmac-adapter-mixin-test.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/unit/mixins/hmac-test', ['exports', 'ember', 'ch-ember-app/mixins/hmac', 'qunit'], function (exports, _ember, _chEmberAppMixinsHmac, _qunit) {\n\n  (0, _qunit.module)('Unit | Mixin | hmac');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var HmacObject = _ember['default'].Object.extend(_chEmberAppMixinsHmac['default']);\n    var subject = HmacObject.create();\n    assert.ok(subject);\n  });\n});","define('ch-ember-app/tests/unit/mixins/hmac-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/mixins/hmac-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/hmac-test.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/unit/mixins/test-test', ['exports', 'ember', 'ch-ember-app/mixins/test', 'qunit'], function (exports, _ember, _chEmberAppMixinsTest, _qunit) {\n\n  (0, _qunit.module)('Unit | Mixin | test');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var TestObject = _ember['default'].Object.extend(_chEmberAppMixinsTest['default']);\n    var subject = TestObject.create();\n    assert.ok(subject);\n  });\n});","define('ch-ember-app/tests/unit/mixins/test-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/mixins/test-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/test-test.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/unit/models/client-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('client', 'Unit | Model | client', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ch-ember-app/tests/unit/models/client-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/client-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/client-test.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/unit/models/entity-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('entity', 'Unit | Model | entity', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ch-ember-app/tests/unit/models/entity-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/entity-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/entity-test.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/unit/routes/client-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:client', 'Unit | Route | client', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ch-ember-app/tests/unit/routes/client-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/client-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/client-test.js should pass jshint.');\n  });\n});","define('ch-ember-app/tests/unit/routes/entity-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:entity', 'Unit | Route | entity', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ch-ember-app/tests/unit/routes/entity-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/entity-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/entity-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('ch-ember-app/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}